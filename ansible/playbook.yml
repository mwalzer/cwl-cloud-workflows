---
- name: Warming up instances
  gather_facts: no
  hosts: all
  tasks:
  - name: Initial connection block
    block:
      - name: Wait 20 seconds, but only start checking after 10 seconds
        wait_for_connection:
          delay: 10
          timeout: 20
    rescue:
      - name: Try to install python 2, when ansible is not able to connect
        raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)

- name: Set type of playbook execution as fact
  hosts: all
  tasks:
    - set_fact: ansible_purpose="{{ purpose | default("cluster") }}"  # call ansible with -e "purpose=image other_variable=foo"
    
- name: Set up docker 
  hosts: cluster
  become: yes
  vars: {docker_edition: 'ce', docker_package: "docker-{{ docker_edition }}", docker_package_state: present}
  roles:
    - geerlingguy.docker

- name: Install java
  hosts: cluster
  become: yes
  roles:
    - geerlingguy.java

- name: Install nextflow
  become: yes
  hosts: master
  tasks:
    - name: curl nextflow 
      shell: "curl -s https://get.nextflow.io | bash"
      register: nextflowcurloutput

- name: Set hostnames properly
  hosts: cluster
  become: yes
  roles:
    - stouts.hostname

- name: Complete /etc/hosts with IP address of all hosts
  hosts: cluster
  become: yes
  tasks:
    - lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}$'
        line: "{{ hostvars[item].private_ipv4 }} {{item}}"
        state: present
      when: hostvars[item].private_ipv4 is defined
      with_items: "{{ groups.all }}"

- name: Get GlusterFS necessities 
  hosts: cluster
  become: yes
  vars: 
    import_vars: ports.yml
  roles:
    - geerlingguy.glusterfs
    - geerlingguy.firewall
  
# https://docs.gluster.org/en/latest/Quick-Start-Guide/Quickstart/#using-ansible-to-deploy-and-manage-glusterfs

- name: Configure GlusterFS
  hosts: cluster
  vars:
    #import_vars: gluster_configuration.yml
    gluster_mount_dir: "/mnt/gluster" 
    gluster_brick_dir: "/srv/gluster/brick" 
    gluster_brick_name: "gluster" 
  tasks:
    - include: configure_gluster.yml
      when: ansible_purpose == "cluster"
  ignore_errors: yes
  
- name: Set up SLURM masters
  hosts: master
  become: yes
  roles:
  - role: 'indigo-dc.slurm'
    vars:
      slurm_type_of_node: 'front'
      slurm_server_ip: "{{ hostvars[groups['master'][0]]['private_ipv4'] }}"
      slurm_wn_nodenames: "{{ groups['node'] | map('extract', hostvars, 'ansible_hostname') | select('search','clustertest-node') | list  }}"
      slurm_server_name: "{{  hostvars[groups['master'][0]]['ansible_hostname']  }}"
      slurm_vnode_prefix: "clustertest-node-nf" 
    when: ansible_purpose == "cluster"

- name: Set up SLURM nodes
  hosts: no-floating
  become: yes
  roles:
  - role: 'indigo-dc.slurm'
    vars:
      slurm_type_of_node: 'wn'
      slurm_server_ip: "{{ hostvars[groups['master'][0]]['private_ipv4'] }}"
      slurm_server_name: "{{  hostvars[groups['master'][0]]['ansible_hostname']  }}"
      slurm_vnode_prefix: "clustertest-node-nf" 
    when: ansible_purpose == "cluster"

# https://wiki.fysik.dtu.dk/niflheim/Slurm_configuration

# - name: Change authorized public keys
#   gather_facts: no
#   hosts: cluster

#   tasks:
#   - name: Make sure the user key is authorized on the instance
#     authorized_key:
#       user: "{{lookup('env','ANSIBLE_REMOTE_USER')}}"
#       key: "{{lookup('env','ssh_key')}}"
#       exclusive: no
#       state: present
...